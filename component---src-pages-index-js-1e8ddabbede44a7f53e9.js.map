{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/bio.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["BlogIndex","render","posts","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","googleFonts","typography","Typography","overrideThemeStyles","a.gatsby-resp-image-link","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_data$site$siteMetada","site","siteMetadata","author","social","display","flex-direction","align-items","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","href","twitter","_public_static_d_2598425350_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","array","arrayOf","Sidebar","react_default","gatsby_browser_entry","sidebarQuery","maxWidth","padding","backgroundColor","marginTop","textDecoration","color","bio","index_es","sourceType","screenName","options","height","_3221830571","Layout","_this$props","year","Date","getFullYear","sidebar","marginLeft"],"mappings":"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","file":"component---src-pages-index-js-1e8ddabbede44a7f53e9.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    const { data } = this.props  \r\n    const posts = data.allMarkdownRemark.edges\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <SEO\r\n          title=\"All posts\"\r\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\r\n        />      \r\n        {posts.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          return (\r\n            <div key={node.fields.slug}>\r\n              <h3\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}</small>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt,\r\n                }}\r\n              />\r\n            </div>\r\n          )\r\n        })}\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query { \r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import Typography from \"typography\"\r\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\r\n\r\ndelete Wordpress2016.googleFonts\r\n\r\nconst typography = new Typography(Wordpress2016)\r\n\r\nWordpress2016.overrideThemeStyles = () => {\r\n  return {\r\n    \"a.gatsby-resp-image-link\": {\r\n      boxShadow: `none`,\r\n    },   \r\n  }\r\n}\r\n\r\n// Hot reload typography in development.\r\nif (process.env.NODE_ENV !== `production`) {\r\n  typography.injectStyles()\r\n}\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\nexport const scale = typography.scale\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nfunction Bio() {\r\n  return (\r\n    <StaticQuery\r\n      query={bioQuery}\r\n      render={data => {\r\n        const { author, social } = data.site.siteMetadata\r\n        return (\r\n          <div\r\n            style={{\r\n              display: `flex`,\r\n              'flex-direction': 'column',\r\n              'align-items': 'center',             \r\n            }}\r\n          >\r\n            <Image\r\n              fixed={data.avatar.childImageSharp.fixed}\r\n              alt={author}\r\n              style={{\r\n                marginRight: rhythm(1 / 2),\r\n                marginBottom: 0,\r\n                minWidth: 50,\r\n                borderRadius: `100%`,\r\n              }}\r\n              imgStyle={{\r\n                borderRadius: `50%`,\r\n              }}\r\n            />\r\n            <p>\r\n              Written by <strong>{author}</strong>.\r\n              {` `}\r\n              <a href={`https://twitter.com/${social.twitter}`}>\r\n                You should follow him on Twitter\r\n              </a>\r\n            </p>\r\n          </div>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst bioQuery = graphql`\r\n  query BioQuery {\r\n    avatar: file(absolutePath: { regex: \"/profile-pic.png/\" }) {\r\n      childImageSharp {\r\n        fixed(width: 50, height: 50) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        author\r\n        social {\r\n          twitter\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Bio\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from 'react'; \r\nimport { StaticQuery, Link, graphql } from \"gatsby\"\r\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\r\n\r\nimport Bio from \"./bio\";\r\n\r\nimport { rhythm, scale } from \"../utils/typography\";\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <StaticQuery\r\n            query={sidebarQuery}\r\n            render={ data => {\r\n                const title = data.site.siteMetadata.title;\r\n                \r\n                return (\r\n                <div style={{             \r\n                    maxWidth: rhythm(10),\r\n                    padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\r\n                    backgroundColor: '#606060',}}>\r\n                    <h6 style={{\r\n                        ...scale(1.5),\r\n                        marginBottom: rhythm(1.5),\r\n                        marginTop: 0,\r\n                    }}>\r\n                        <Link style={{\r\n                            boxShadow: `none`,\r\n                            textDecoration: `none`,\r\n                            color: `inherit`,\r\n                            }}\r\n                            to={`/`}>\r\n                            {title}\r\n                        </Link>\r\n                    </h6>\r\n                    <Bio />\r\n                    <TwitterTimelineEmbed\r\n                        sourceType=\"landal79\"\r\n                        screenName=\"landal79\"\r\n                        options={{height: 400}} />\r\n                </div>\r\n                )\r\n            }}\r\n        />\r\n    )\r\n} \r\n\r\nexport default Sidebar;\r\n\r\nconst sidebarQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }   \r\n  }\r\n`","import React from \"react\";\r\n\r\nimport { rhythm } from \"../utils/typography\";\r\n\r\nimport Sidebar from \"./sidebar\";\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { location, children } = this.props;\r\n    const year = new Date().getFullYear();\r\n\r\n    return (\r\n      <div>\r\n        <div style={{\r\n            display: `flex`,          \r\n            'flex-direction': `row`,\r\n          }}>\r\n            <Sidebar />\r\n            <div>\r\n              <div style={{\r\n                marginLeft: `auto`,\r\n                marginRight: `auto`,\r\n                maxWidth: rhythm(24),\r\n                padding: `${rhythm(3 / 4)}`,\r\n              }}>{children}</div> \r\n              <footer>\r\n                © {year}, Built with\r\n                {` `}\r\n                <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n              </footer>    \r\n             </div>       \r\n        </div>      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}