{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["BlogIndex","render","posts","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","map","_ref","node","frontmatter","fields","slug","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","style","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Sidebar","react_default","gatsby_browser_entry","sidebarQuery","_data$site$siteMetada","social","className","word-spacing","gatsby_image_default","fixed","avatar","childImageSharp","alt","href","twitter","index_es","sourceType","screenName","options","height","_1286200194","Layout","year","Date","getFullYear","sidebar"],"mappings":"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","file":"component---src-pages-index-js-b6f9db601fa896605f44.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    const { data } = this.props  \r\n    const posts = data.allMarkdownRemark.edges\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <SEO\r\n          title=\"All posts\"\r\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\r\n        />      \r\n        {posts.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          return (\r\n            <div key={node.fields.slug}>\r\n              <h3>\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}</small>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt,\r\n                }}\r\n              />\r\n            </div>\r\n          )\r\n        })}\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query { \r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }, \r\n      filter: { frontmatter : {draft : {ne : true}}}\r\n      ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from 'react'; \r\nimport { StaticQuery, Link, graphql } from \"gatsby\"\r\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\r\nimport Image from \"gatsby-image\";\r\n\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <StaticQuery\r\n            query={sidebarQuery}\r\n            render={ data => {                \r\n                const { author, social, title } = data.site.siteMetadata;\r\n                return (\r\n                  <div className=\"d-flex flex-column flex-grow-1 align-items-center justify-content-center\">                   \r\n                      <h3 className=\"text-monospace text-center\">\r\n                        <Link style={{'word-spacing': '100vw'}}\r\n                           to={`/`}>{title}</Link>\r\n                      </h3>                    \r\n                      <Image\r\n                        className=\"img-fluid img-thumbnail rounded-circle mx-auto\"\r\n                        fixed={data.avatar.childImageSharp.fixed}\r\n                        alt={author}              \r\n                    />\r\n                    <p>\r\n                      Written by <strong>{author}</strong>.\r\n                      {` `}\r\n                      <a href={`https://twitter.com/${social.twitter}`}>\r\n                        You should follow him on Twitter\r\n                      </a>\r\n                    </p>                     \r\n                      <TwitterTimelineEmbed\r\n                            sourceType=\"landal79\"\r\n                            screenName=\"landal79\"\r\n                            options={{height: 400}} />                     \r\n                  </div>                                                                          \r\n                )\r\n            }}\r\n        />\r\n    )\r\n} \r\n\r\nexport default Sidebar;\r\n\r\nconst sidebarQuery = graphql`\r\n  query {\r\n    avatar: file(absolutePath: { regex: \"/profile-pic.png/\" }) {\r\n      childImageSharp {\r\n        fixed(width: 50, height: 50) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        social {\r\n          twitter\r\n        }\r\n      }\r\n    }   \r\n  }\r\n`","import React from \"react\";\r\n\r\nimport Sidebar from \"./sidebar\";\r\nimport \"./layout.css\";\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    const year = new Date().getFullYear();\r\n\r\n    return (\r\n      <div className=\"container-fluid no-gutters h-100\">\r\n        <div className=\"row\">\r\n          <div className=\"pt-3 col-left col-12 col-md-3 flex-grow-1\">\r\n            <Sidebar />\r\n          </div>\r\n          <div className=\"offset-md-3 col pt-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">{children}</div>\r\n            </div>\r\n            <footer>\r\n              © {year}, Built with\r\n              {` `}\r\n              <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}