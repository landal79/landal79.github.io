{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","frontmatter","description","excerpt","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Sidebar","react_default","gatsby_browser_entry","sidebarQuery","_data$site$siteMetada","social","className","word-spacing","gatsby_image_default","fixed","avatar","childImageSharp","alt","href","twitter","index_es","sourceType","screenName","options","height","_3412762182","Layout","year","Date","getFullYear","sidebar"],"mappings":"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","file":"component---src-templates-blog-post-js-6d75caa18b7737d9bbcc.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark\r\n    const siteTitle = this.props.data.site.siteMetadata.title\r\n    const { previous, next } = this.props.pageContext\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO\r\n          title={post.frontmatter.title}\r\n          description={post.frontmatter.description || post.excerpt}\r\n        />\r\n        <h1>{post.frontmatter.title}</h1>\r\n        <p>\r\n          {post.frontmatter.date}\r\n        </p>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        <hr />        \r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\r\nimport { StaticQuery, Link, graphql } from \"gatsby\"\r\nimport { TwitterTimelineEmbed } from \"react-twitter-embed\"\r\nimport Image from \"gatsby-image\"\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <StaticQuery\r\n      query={sidebarQuery}\r\n      render={data => {\r\n        const { author, social, title } = data.site.siteMetadata\r\n        return (\r\n          <div className=\"d-flex flex-column flex-grow-1 align-items-center justify-content-center\">\r\n            <h3 className=\"text-monospace text-center\">\r\n              <Link className=\"text-decoration-none\" style={{ \"word-spacing\": \"100vw\" }} to={`/`}>\r\n                {title}\r\n              </Link>\r\n            </h3>\r\n            <Image\r\n              className=\"img-fluid img-thumbnail rounded-circle mx-auto\"\r\n              fixed={data.avatar.childImageSharp.fixed}\r\n              alt={author}\r\n            />\r\n            <p>\r\n              Written by <strong>{author}</strong>.{` `}\r\n              <a href={`https://twitter.com/${social.twitter}`}>\r\n                You should follow him on Twitter\r\n              </a>\r\n            </p>\r\n            <TwitterTimelineEmbed\r\n              sourceType=\"landal79\"\r\n              screenName=\"landal79\"\r\n              options={{ height: 400 }}\r\n            />\r\n          </div>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\nconst sidebarQuery = graphql`\r\n  query {\r\n    avatar: file(absolutePath: { regex: \"/profile-pic.png/\" }) {\r\n      childImageSharp {\r\n        fixed(width: 50, height: 50) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        social {\r\n          twitter\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\";\r\n\r\nimport Sidebar from \"./sidebar\";\r\nimport \"./layout.css\";\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    const year = new Date().getFullYear();\r\n\r\n    return (\r\n      <div className=\"container-fluid no-gutters h-100\">\r\n        <div className=\"row\">\r\n          <div className=\"pt-3 col-left col-12 col-md-3 flex-grow-1\">\r\n            <Sidebar />\r\n          </div>\r\n          <div className=\"offset-md-3 col pt-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">{children}</div>\r\n            </div>\r\n            <footer>\r\n              © {year}, Built with\r\n              {` `}\r\n              <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}